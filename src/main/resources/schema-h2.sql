-- H2 specific schema
-- Drop tables if they exist (for clean start)
DROP TABLE IF EXISTS payments CASCADE;
DROP TABLE IF EXISTS invoices CASCADE;

-- Create ENUM tables for H2
CREATE TABLE IF NOT EXISTS payment_status_enum (
    status VARCHAR(20) PRIMARY KEY
);

-- Insert status values
MERGE INTO payment_status_enum (status) VALUES ('PENDING');
MERGE INTO payment_status_enum (status) VALUES ('PAID');
MERGE INTO payment_status_enum (status) VALUES ('OVERDUE');
MERGE INTO payment_status_enum (status) VALUES ('PARTIALLY_PAID');
MERGE INTO payment_status_enum (status) VALUES ('CANCELLED');
MERGE INTO payment_status_enum (status) VALUES ('REFUNDED');

-- Create ENUM for payment method
CREATE TABLE IF NOT EXISTS payment_method_enum (
    method VARCHAR(20) PRIMARY KEY
);

-- Insert method values
MERGE INTO payment_method_enum (method) VALUES ('CREDIT_CARD');
MERGE INTO payment_method_enum (method) VALUES ('BANK_TRANSFER');
MERGE INTO payment_method_enum (method) VALUES ('CASH');
MERGE INTO payment_method_enum (method) VALUES ('CHECK');
MERGE INTO payment_method_enum (method) VALUES ('OTHER');

-- Create invoices table with H2 syntax
CREATE TABLE IF NOT EXISTS invoices (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    invoice_number VARCHAR(255) NOT NULL UNIQUE,
    customer_name VARCHAR(255) NOT NULL,
    customer_email VARCHAR(255) NOT NULL,
    customer_phone VARCHAR(50),
    issue_date DATE NOT NULL,
    due_date DATE NOT NULL,
    subtotal DECIMAL(19,2) NOT NULL,
    tax_amount DECIMAL(19,2) NOT NULL,
    total_amount DECIMAL(19,2) NOT NULL,
    amount_paid DECIMAL(19,2) NOT NULL DEFAULT 0.00,
    balance_due DECIMAL(19,2) NOT NULL,
    status VARCHAR(20) NOT NULL,
    notes TEXT,
    terms_conditions TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (status) REFERENCES payment_status_enum(status)
);

-- Create payments table with H2 syntax
CREATE TABLE IF NOT EXISTS payments (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    invoice_id BIGINT NOT NULL,
    amount DECIMAL(19,2) NOT NULL,
    payment_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    payment_method VARCHAR(20) NOT NULL,
    reference_number VARCHAR(100),
    notes TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (invoice_id) REFERENCES invoices(id) ON DELETE CASCADE,
    FOREIGN KEY (payment_method) REFERENCES payment_method_enum(method)
);

-- Create indexes
CREATE INDEX idx_invoices_customer_email ON invoices(customer_email);
CREATE INDEX idx_invoices_status ON invoices(status);
CREATE INDEX idx_payments_invoice_id ON payments(invoice_id);
CREATE INDEX idx_payments_payment_date ON payments(payment_date);
