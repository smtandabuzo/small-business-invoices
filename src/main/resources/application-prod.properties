# ===================================================================
# Spring Boot Application Properties for Production Environment
# ===================================================================

# Security Headers
server.tomcat.additional-tomcat-connectors[0].property.allowed-http-methods=GET,HEAD,POST,PUT,DELETE,OPTIONS
#server.error.include-message=never
#server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.tomcat.protocol-header=x-forwarded-proto
server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.port-header=X-Forwarded-Port
#server.use-forward-headers=true
server.error.whitelabel.enabled=false
server.servlet.context-path=/api

# Security Headers
security.headers.cache=false
security.headers.content-security-policy=default-src 'self'
security.headers.xss-protection=1; mode=block
security.headers.x-frame-options=DENY
security.headers.content-type-options=nosniff
security.headers.referrer-policy=strict-origin-when-cross-origin
security.headers.feature-policy=geolocation 'none'; midi 'none'; sync-xhr 'none'; microphone 'none'; camera 'none'; magnetometer 'none'; gyroscope 'none'; fullscreen 'self'; payment 'none'
# API Documentation (OpenAPI/Swagger)
# In production, we disable the Swagger UI by default for security
# To enable, set ENABLE_API_DOCS=true in environment variables
springdoc.api-docs.enabled=${ENABLE_API_DOCS:false}
springdoc.swagger-ui.enabled=${ENABLE_SWAGGER_UI:false}
springdoc.swagger-ui.path=/api-docs

# API Security
# These should be set via environment variables in production
app.security.jwt.secret=${JWT_SECRET:change-this-to-a-secure-random-string}
# 24 hours
app.security.jwt.expiration-ms=${JWT_EXPIRATION_MS:86400000}

# CORS Configuration for Production
# Configure allowed origins, methods, and headers as needed
spring.mvc.cors.allowed-origins=${ALLOWED_ORIGINS:http://production-alb-1780857463.eu-north-1.elb.amazonaws.com}
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# API Rate Limiting
# Configure rate limiting for API endpoints
app.rate-limit.enabled=true
app.rate-limit.capacity=100
app.rate-limit.time-window=60s

# Request/Response Logging
# Enable detailed request/response logging for API endpoints
logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# API Versioning
app.api.version=v1
app.api.base-path=/api/${app.api.version}

# API Documentation Info
app.api.title=Small Business Invoices API
app.api.description=Production API for Small Business Invoices Management System
app.api.contact.name=API Support
app.api.contact.email=support@smallbusiness.com
app.api.contact.url=https://support.smallbusiness.com
app.api.license=Proprietary
app.api.license-url=https://smallbusiness.com/terms
app.api.terms-of-service=https://smallbusiness.com/terms

# Actuator Endpoints for Monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.endpoint.health.probes.enabled=true
#management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
#management.metrics.export.prometheus.enabled=true

# Security Headers
#server.servlet.session.cookie.secure=true
#server.servlet.session.cookie.http-only=true
#server.servlet.session.cookie.same-site=lax

# HTTP/2 (if your production environment supports it)
server.http2.enabled=true

# Request/Response Compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript,application/x-javascript
server.compression.min-response-size=2KB

# ===================================================================
# AWS RDS Database Configuration
# ===================================================================

# Database Connection
spring.datasource.url=jdbc:mysql://${RDS_ENDPOINT:localhost}:3306/${RDS_DB_NAME:small_business}?useSSL=true&requireSSL=true&allowPublicKeyRetrieval=true&serverTimezone=UTC&createDatabaseIfNotExist=true
spring.datasource.username=${RDS_USERNAME:}
spring.datasource.password=${RDS_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool Settings (HikariCP)

spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA/Hibernate
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# Flyway Database Migration

# Logging
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.flywaydb=WARN
# spring.datasource.username=your_username
# spring.datasource.password=your_secure_password

# Hikari Connection Pool Settings
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=false
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED
spring.datasource.hikari.connection-init-sql=SET SESSION TRANSACTION ISOLATION LEVEL READ COMMITTED

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.generate_statistics=false

# Transaction Management
spring.transaction.default-timeout=30
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.open-in-view=false

# Server Configuration
server.port=8080
# Remove context path to match ALB health check path
# server.servlet.context-path=/api
server.servlet.session.timeout=30m
server.error.include-message=always
server.error.include-binding-errors=always

# Logging Configuration
logging.level.root=INFO
logging.level.com.sazimtandabuzo.smallbusinessinvoices=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate=WARN
logging.level.org.springframework.security=WARN
logging.file.name=logs/application.log
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
#logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %X{correlationId} %m%n

# Log Rotation
logging.logback.rollingpolicy.max-file-size=50MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB
logging.logback.rollingpolicy.clean-history-on-start=false

# Actuator Configuration
management.endpoints.web.base-path=/actuator
#management.endpoints.web.exposure.include=health,info,metrics
#management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
#management.endpoint.health.probes.enabled=true
management.health.db.enabled=true
management.health.defaults.enabled=true
management.endpoint.health.group.custom.include=db,diskSpace
management.endpoint.health.group.custom.additional-path=server:/
management.endpoint.health.status.http-mapping.down=503

# Security Configuration (Update these in production!)
# Generate a secure secret: openssl rand -base64 32
jwt.secret=your-jwt-secret-key-change-this-in-production
# 24 hours in milliseconds (86400000 ms)
jwt.expiration=86400000

# CORS Configuration (Update with your frontend URL)
cors.allowed-origins=http://production-alb-1780857463.eu-north-1.elb.amazonaws.com,http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# Activate production profile
spring.profiles.active=prod

# Flyway Database Migration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.baseline-version=1
spring.flyway.baseline-description=Initial version
spring.flyway.encoding=UTF-8
spring.flyway.table=flyway_schema_history
spring.flyway.placeholders.app_name=small-business-invoices

# Actuator Endpoints (for monitoring)
#management.endpoints.web.exposure.include=health,info,metrics,flyway
#management.endpoint.health.show-details=when_authorized
management.endpoint.health.roles=ADMIN
management.endpoint.metrics.enabled=true

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Connection Pool Configuration
#spring.datasource.hikari.connection-timeout=20000
#spring.datasource.hikari.minimum-idle=10
#spring.datasource.hikari.maximum-pool-size=20
#spring.datasource.hikari.idle-timeout=300000
#spring.datasource.hikari.max-lifetime=1200000
#spring.datasource.hikari.auto-commit=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Email Configuration (Update with your SMTP details)
spring.mail.host=smtp.your-email-provider.com
spring.mail.port=587
spring.mail.username=your-email@example.com
spring.mail.password=your-email-password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Application Specific Properties
app.name=Small Business Invoices
app.version=1.0.0
app.timezone=UTC

# Swagger Configuration (Disable in production if not needed)
#springdoc.api-docs.enabled=true
#springdoc.swagger-ui.enabled=true
springdoc.paths-to-match=/api/**
